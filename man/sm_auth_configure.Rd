% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auth.R
\name{sm_auth_configure}
\alias{sm_auth_configure}
\title{Configure OAuth client and API key for Secret Manager}
\usage{
sm_auth_configure(path = NULL, client = NULL, api_key = NULL, app = NULL)
}
\arguments{
\item{path}{Path to a JSON file containing the OAuth client ID and secret.
This is the recommended way to configure an OAuth client.}

\item{client}{An \code{httr::oauth_app} object or \code{gargle::gargle_oauth_client}
object. Alternatively, provide \code{path}.}

\item{api_key}{A string representing your Google Cloud API key.}

\item{app}{Deprecated. Use \code{client} instead.}
}
\value{
Invisibly returns the updated auth configuration (an \code{AuthState} object).
}
\description{
This function allows advanced users to provide their own OAuth client ID and
secret (from a JSON file downloaded from Google Cloud Console) or an API key.

\strong{OAuth Client}: For \code{secretmanager}, providing your own OAuth client is
\strong{highly recommended} as the package does not ship with a default client
due to the sensitive nature of the API.

\strong{API Key}: While the \code{gargle} framework supports API keys, most Secret
Manager operations require OAuth2.0 authentication. An API key might be
useful for very limited, typically read-only, public data scenarios, which are
rare for Secret Manager. It's included for structural consistency with \code{gargle}
but may have limited direct use for this package.
}
\examples{
\dontrun{
# Configure with an OAuth client downloaded from GCP
sm_auth_configure(
  path = "/path/to/your/oauth-client-secret.json"
)

# To configure with an API key (less common for Secret Manager):
# sm_auth_configure(api_key = "YOUR_API_KEY")

# Check configured client:
sm_oauth_client()
}
}
