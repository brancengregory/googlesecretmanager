[{"path":"https://brancengregory.github.io/secretmanager/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 secretmanager authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://brancengregory.github.io/secretmanager/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brancen Gregory. Author, maintainer.","code":""},{"path":"https://brancengregory.github.io/secretmanager/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Gregory B (2025). secretmanager: Manage Google Cloud Platform Secrets R. R package version 0.0.2, https://brancengregory.github.io/secretmanager/.","code":"@Manual{,   title = {secretmanager: Manage Google Cloud Platform Secrets with R},   author = {Brancen Gregory},   year = {2025},   note = {R package version 0.0.2},   url = {https://brancengregory.github.io/secretmanager/}, }"},{"path":"https://brancengregory.github.io/secretmanager/index.html","id":"secretmanager","dir":"","previous_headings":"","what":"Manage Google Cloud Platform Secrets with R","title":"Manage Google Cloud Platform Secrets with R","text":"R package interacting Google Cloud Secret Manager, providing secure way manage access secrets R applications.","code":""},{"path":"https://brancengregory.github.io/secretmanager/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Manage Google Cloud Platform Secrets with R","text":"can install development version secretmanager GitHub using:","code":"# install.packages(\"remotes\") remotes::install_github(\"brancengregory/secretmanager\")"},{"path":"https://brancengregory.github.io/secretmanager/index.html","id":"authentication","dir":"","previous_headings":"","what":"Authentication","title":"Manage Google Cloud Platform Secrets with R","text":"package uses gargle package authentication Google Cloud services. using package, ’ll need : Set authentication credentials Google Cloud Ensure necessary permissions access Secret Manager","code":""},{"path":"https://brancengregory.github.io/secretmanager/index.html","id":"authentication-methods","dir":"","previous_headings":"Authentication","what":"Authentication Methods","title":"Manage Google Cloud Platform Secrets with R","text":"three ways authenticate Google Cloud Secret Manager:","code":""},{"path":"https://brancengregory.github.io/secretmanager/index.html","id":"id_1-explicit-token-authentication","dir":"","previous_headings":"Authentication > Authentication Methods","what":"1. Explicit Token Authentication","title":"Manage Google Cloud Platform Secrets with R","text":"","code":"library(secretmanager) library(gargle)  # Define required scopes and fetch token scopes <- c(\"https://www.googleapis.com/auth/cloud-platform\") token <- gargle::token_fetch(scopes = scopes)  # Initialize the package with the token secretmanager_auth(token = token)"},{"path":"https://brancengregory.github.io/secretmanager/index.html","id":"id_2-application-default-credentials","dir":"","previous_headings":"Authentication > Authentication Methods","what":"2. Application Default Credentials","title":"Manage Google Cloud Platform Secrets with R","text":"","code":"library(secretmanager) library(gargle)  # This will open a browser window for authentication gargle::credentials_app_default()"},{"path":"https://brancengregory.github.io/secretmanager/index.html","id":"id_3-service-account-key","dir":"","previous_headings":"Authentication > Authentication Methods","what":"3. Service Account Key","title":"Manage Google Cloud Platform Secrets with R","text":"Choose authentication method best fits use case. explicit token method provides control, application default credentials convenient local development, service account keys useful automated environments.","code":"library(secretmanager) library(gargle)  # Set the path to your service account key file gargle::credentials_service_account(   path = \"path/to/service-account-key.json\" )"},{"path":"https://brancengregory.github.io/secretmanager/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Manage Google Cloud Platform Secrets with R","text":"’s basic example use package:","code":"library(secretmanager)  # Set your project ID sm_project_set(\"my-project-id\")  # List all secrets in the project secrets <- sm_secret_ls()  # Get metadata for a specific secret secret <- sm_secret_get(\"my-secret-id\")  # Create a new secret new_secret <- sm_secret_create(   secret_id = \"my-new-secret\",   replication = list(automatic = list()) )  # Add a version to a secret version <- sm_secret_version_add(   secret_id = \"my-secret\",   payload = \"my-secret-value\" )  # List versions of a secret versions <- sm_secret_version_ls(\"my-secret\")  # Delete a secret version sm_secret_version_delete(   secret_id = \"my-secret\",   version_id = \"latest\" )  # Delete a secret sm_secret_delete(\"my-secret\")"},{"path":"https://brancengregory.github.io/secretmanager/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Manage Google Cloud Platform Secrets with R","text":"Secure access Google Cloud Secret Manager Easy integration gargle authentication Creating, reading, updating, deleting secrets Managing secret versions Base64 encoding/decoding secret values Comprehensive error handling Project-level operations Secret metadata management","code":""},{"path":"https://brancengregory.github.io/secretmanager/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Manage Google Cloud Platform Secrets with R","text":"package uses following development tools: testthat testing roxygen2 documentation renv dependency management","code":""},{"path":"https://brancengregory.github.io/secretmanager/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Manage Google Cloud Platform Secrets with R","text":"Contributions welcome! Please feel free submit Pull Request.","code":""},{"path":"https://brancengregory.github.io/secretmanager/index.html","id":"security","dir":"","previous_headings":"","what":"Security","title":"Manage Google Cloud Platform Secrets with R","text":"package handles sensitive information. Please ensure : Secrets may printed R console live logs Never commit credentials secrets version control Use appropriate access controls Google Cloud Follow security best practices handling secrets","code":""},{"path":"https://brancengregory.github.io/secretmanager/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting Help","title":"Manage Google Cloud Platform Secrets with R","text":"encounter issues questions, please: Check documentation Review gargle documentation Open issue","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/as_secret.character.html","id":null,"dir":"Reference","previous_headings":"","what":"As Secret Character — as_secret.character","title":"As Secret Character — as_secret.character","text":"Secret Character","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/as_secret.character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"As Secret Character — as_secret.character","text":"","code":"# S3 method for class 'character' as_secret(x, ...)"},{"path":"https://brancengregory.github.io/secretmanager/reference/as_secret.character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"As Secret Character — as_secret.character","text":"x string ... Unused argument needed method","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/as_secret.html","id":null,"dir":"Reference","previous_headings":"","what":"As Secret — as_secret","title":"As Secret — as_secret","text":"Secret","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/as_secret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"As Secret — as_secret","text":"","code":"as_secret(x, ...)"},{"path":"https://brancengregory.github.io/secretmanager/reference/as_secret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"As Secret — as_secret","text":"x string ... Unused argument needed method","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/print.sm_secret.html","id":null,"dir":"Reference","previous_headings":"","what":"Print sm_secret — print.sm_secret","title":"Print sm_secret — print.sm_secret","text":"Print sm_secret","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/print.sm_secret.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print sm_secret — print.sm_secret","text":"","code":"# S3 method for class 'sm_secret' print(x, ...)"},{"path":"https://brancengregory.github.io/secretmanager/reference/print.sm_secret.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print sm_secret — print.sm_secret","text":"x sm_secret object ... Additional arguments passed method","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/print.sm_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Print sm_tbl — print.sm_tbl","title":"Print sm_tbl — print.sm_tbl","text":"Print sm_tbl","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/print.sm_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print sm_tbl — print.sm_tbl","text":"","code":"# S3 method for class 'sm_tbl' print(x, ...)"},{"path":"https://brancengregory.github.io/secretmanager/reference/print.sm_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print sm_tbl — print.sm_tbl","text":"x sm_tbl object ... Additional arguments passed method","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the configured API key — sm_api_key","title":"Retrieve the configured API key — sm_api_key","text":"Returns currently configured API key secretmanager package. Note: API keys limited use Secret Manager, primarily relies OAuth2.0.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the configured API key — sm_api_key","text":"","code":"sm_api_key()"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the configured API key — sm_api_key","text":"string containing API key, NULL key configured.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_api_key.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the configured API key — sm_api_key","text":"","code":"if (FALSE) { # \\dontrun{ # Configure API key first (if applicable) # sm_auth_configure(api_key = \"YOUR_API_KEY\") key <- sm_api_key() if (!is.null(key)) {   print(key) } } # }"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_auth.html","id":null,"dir":"Reference","previous_headings":"","what":"Authenticate with Google Secret Manager — sm_auth","title":"Authenticate with Google Secret Manager — sm_auth","text":"function handles authentication Google Cloud Secret Manager. called automatically first token needed, can called directly user pre-authenticate switch identities, scopes, authentication methods (e.g., user OAuth, service account token). Following gargle best practices sensitive APIs, secretmanager come built-OAuth client API key. must configure via sm_auth_configure() provide service account token via path argument.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_auth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Authenticate with Google Secret Manager — sm_auth","text":"","code":"sm_auth(   email = gargle::gargle_oauth_email(),   path = NULL,   scopes = \"https://www.googleapis.com/auth/secretmanager\",   cache = gargle::gargle_oauth_cache(),   use_oob = gargle::gargle_oob_default(),   token = NULL )"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_auth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Authenticate with Google Secret Manager — sm_auth","text":"email Optional. email address Google identity want authenticate . Useful selecting specific account multiple, non-interactive authentication. NULL, gargle try obtain \"gargle_oauth_email\" option allow choose list interactive sessions. See gargle::gargle_oauth_email() details. path Optional. Path service account token (JSON file) pre-existing token. provided, used authentication instead OAuth flow. See gargle::token_fetch() details accepted formats. scopes OAuth scopes request. Secret Manager, common scope \"https://www.googleapis.com/auth/secretmanager\" broader \"https://www.googleapis.com/auth/cloud-platform\". Defaults \"https://www.googleapis.com/auth/secretmanager\". cache location OAuth token cache. Defaults gargle::gargle_oauth_cache(). use_oob Whether prefer \"--band\" (OOB) authentication. Defaults gargle::gargle_oob_default(). Useful non-interactive sessions browser easily launched. token pre-existing token object (e.g., httr::Token2.0 another gargle-using package). provided, token used directly.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_auth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Authenticate with Google Secret Manager — sm_auth","text":"Invisibly returns NULL. main effect configure authentication state package.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_auth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Authenticate with Google Secret Manager — sm_auth","text":"","code":"if (FALSE) { # \\dontrun{ # To configure your own OAuth client (do this once per project/user): sm_auth_configure(  path = \"/path/to/your/oauth-client-secret.json\" )  # Authenticate (often not needed explicitly, called by API functions): sm_auth()  # Authenticate with a specific user: sm_auth(email = \"my_user@example.com\")  # Authenticate using a service account: sm_auth(path = \"/path/to/your/service-account-key.json\")  # Authenticate using a pre-fetched token (like googleCloudStorageR example): token <- gargle::token_fetch(   scopes = \"https://www.googleapis.com/auth/cloud-platform\" ) sm_auth(token = token) } # }"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_auth_configure.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure OAuth client and API key for Secret Manager — sm_auth_configure","title":"Configure OAuth client and API key for Secret Manager — sm_auth_configure","text":"function allows advanced users provide OAuth client ID secret (JSON file downloaded Google Cloud Console) API key. OAuth Client: secretmanager, providing OAuth client highly recommended package ship default client due sensitive nature API. API Key: gargle framework supports API keys, Secret Manager operations require OAuth2.0 authentication. API key might useful limited, typically read-, public data scenarios, rare Secret Manager. included structural consistency gargle may limited direct use package.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_auth_configure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure OAuth client and API key for Secret Manager — sm_auth_configure","text":"","code":"sm_auth_configure(path = NULL, client = NULL, api_key = NULL, app = NULL)"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_auth_configure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure OAuth client and API key for Secret Manager — sm_auth_configure","text":"path Path JSON file containing OAuth client ID secret. recommended way configure OAuth client. client httr::oauth_app object gargle::gargle_oauth_client object. Alternatively, provide path. api_key string representing Google Cloud API key. app Deprecated. Use client instead.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_auth_configure.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure OAuth client and API key for Secret Manager — sm_auth_configure","text":"Invisibly returns updated auth configuration (AuthState object).","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_auth_configure.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure OAuth client and API key for Secret Manager — sm_auth_configure","text":"","code":"if (FALSE) { # \\dontrun{ # Configure with an OAuth client downloaded from GCP sm_auth_configure(   path = \"/path/to/your/oauth-client-secret.json\" )  # To configure with an API key (less common for Secret Manager): # sm_auth_configure(api_key = \"YOUR_API_KEY\")  # Check configured client: sm_oauth_client() } # }"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_deauth.html","id":null,"dir":"Reference","previous_headings":"","what":"De-authenticate from Secret Manager — sm_deauth","title":"De-authenticate from Secret Manager — sm_deauth","text":"Clears current Secret Manager token. means next API request requires authentication trigger authentication process anew (e.g., calling sm_auth()). Since Secret Manager generally requires authentication significant operations (typically use API keys accessing secrets), de-authentication primarily serves clear current user's session force re-authentication.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_deauth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"De-authenticate from Secret Manager — sm_deauth","text":"","code":"sm_deauth()"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_deauth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"De-authenticate from Secret Manager — sm_deauth","text":"Invisibly returns NULL.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_deauth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"De-authenticate from Secret Manager — sm_deauth","text":"","code":"if (FALSE) { # \\dontrun{ sm_deauth() # Next API call will re-trigger auth # list_secrets() # (Assuming this is a function in your package) } # }"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_endpoint.html","id":null,"dir":"Reference","previous_headings":"","what":"Secret Manager Endpoint — sm_endpoint","title":"Secret Manager Endpoint — sm_endpoint","text":"Secret Manager Endpoint","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_endpoint.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Secret Manager Endpoint — sm_endpoint","text":"","code":"sm_endpoint(i)"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_endpoint.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Secret Manager Endpoint — sm_endpoint","text":"index endpoint","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_endpoints.html","id":null,"dir":"Reference","previous_headings":"","what":"List Secret Manager endpoints — sm_endpoints","title":"List Secret Manager endpoints — sm_endpoints","text":"secretmanager package stores named list Secret Manager API v1 endpoints (\"methods\", using Google's vocabulary) internally functions expose data. sm_endpoint() returns one endpoint, .e. uses [[. sm_endpoints() returns list endpoints, .e. uses [. names list (id sub-elements) nicknames can used specify endpoint request_generate(). endpoint, store nickname id, associated HTTP verb, path, details parameters. list derived programmatically Secret Manager API v1 Discovery Document (https://www.googleapis.com/discovery/v1/apis/secretmanager/v1/rest) using approach described Discovery Documents section gargle vignette Request helper functions.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_endpoints.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Secret Manager endpoints — sm_endpoints","text":"","code":"sm_endpoints(i = NULL)"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_endpoints.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Secret Manager endpoints — sm_endpoints","text":"name(s) integer index(ices) endpoints return. optional sm_endpoints() , given, entire list returned.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_endpoints.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Secret Manager endpoints — sm_endpoints","text":"One Secret Manager API v1 endpoints used internally secretmanager.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_endpoints.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Secret Manager endpoints — sm_endpoints","text":"","code":"str(head(sm_endpoints(), 3), max.level = 2) #> List of 3 #>  $ secretmanager.projects.locations.list        :List of 8 #>   ..$ id            : chr \"secretmanager.projects.locations.list\" #>   ..$ httpMethod    : chr \"GET\" #>   ..$ path          : 'fs_path' chr \"/v1/{name}/locations\" #>   ..$ parameters    :List of 16 #>   ..$ scopes        : chr \"cloud-platform\" #>   ..$ description   : chr \"Lists information about the supported locations for this service.\" #>   ..$ response      : chr \"ListLocationsResponse\" #>   ..$ parameterOrder: chr \"name\" #>  $ secretmanager.projects.locations.get         :List of 8 #>   ..$ id            : chr \"secretmanager.projects.locations.get\" #>   ..$ httpMethod    : chr \"GET\" #>   ..$ path          : 'fs_path' chr \"/v1/{name}\" #>   ..$ parameters    :List of 12 #>   ..$ scopes        : chr \"cloud-platform\" #>   ..$ description   : chr \"Gets information about a location.\" #>   ..$ response      : chr \"Location\" #>   ..$ parameterOrder: chr \"name\" #>  $ secretmanager.projects.locations.secrets.list:List of 8 #>   ..$ id            : chr \"secretmanager.projects.locations.secrets.list\" #>   ..$ httpMethod    : chr \"GET\" #>   ..$ path          : 'fs_path' chr \"/v1/{parent}/secrets\" #>   ..$ parameters    :List of 15 #>   ..$ scopes        : chr \"cloud-platform\" #>   ..$ description   : chr \"Lists Secrets.\" #>   ..$ response      : chr \"ListSecretsResponse\" #>   ..$ parameterOrder: chr \"parent\" sm_endpoint(\"secretmanager.projects.secrets.versions.destroy\") #> $id #> [1] \"secretmanager.projects.secrets.versions.destroy\" #>  #> $httpMethod #> [1] \"POST\" #>  #> $path #> /v1/{name}:destroy #>  #> $parameters #> $parameters$name #> $parameters$name$description #> [1] \"Required. The resource name of the SecretVersion to destroy in the format `projects/*/secrets/*/versions/*` or `projects/*/locations/*/secrets/*/versions/*`.\" #>  #> $parameters$name$pattern #> [1] \"^projects/[^/]+/secrets/[^/]+/versions/[^/]+$\" #>  #> $parameters$name$location #> [1] \"path\" #>  #> $parameters$name$required #> [1] TRUE #>  #> $parameters$name$type #> [1] \"string\" #>  #>  #> $parameters$etag #> $parameters$etag$description #> [1] \"Optional. Etag of the SecretVersion. The request succeeds if it matches the etag of the currently stored secret version object. If the etag is omitted, the request succeeds.\" #>  #> $parameters$etag$type #> [1] \"string\" #>  #> $parameters$etag$location #> [1] \"body\" #>  #>  #> $parameters$access_token #> $parameters$access_token$type #> [1] \"string\" #>  #> $parameters$access_token$description #> [1] \"OAuth access token.\" #>  #> $parameters$access_token$location #> [1] \"query\" #>  #>  #> $parameters$alt #> $parameters$alt$type #> [1] \"string\" #>  #> $parameters$alt$description #> [1] \"Data format for response.\" #>  #> $parameters$alt$default #> [1] \"json\" #>  #> $parameters$alt$enum #> [1] \"json\"  \"media\" \"proto\" #>  #> $parameters$alt$enumDescriptions #> [1] \"Responses with Content-Type of application/json\"       #> [2] \"Media download with context-dependent Content-Type\"    #> [3] \"Responses with Content-Type of application/x-protobuf\" #>  #> $parameters$alt$location #> [1] \"query\" #>  #>  #> $parameters$callback #> $parameters$callback$type #> [1] \"string\" #>  #> $parameters$callback$description #> [1] \"JSONP\" #>  #> $parameters$callback$location #> [1] \"query\" #>  #>  #> $parameters$fields #> $parameters$fields$type #> [1] \"string\" #>  #> $parameters$fields$description #> [1] \"Selector specifying which fields to include in a partial response.\" #>  #> $parameters$fields$location #> [1] \"query\" #>  #>  #> $parameters$key #> $parameters$key$type #> [1] \"string\" #>  #> $parameters$key$description #> [1] \"API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\" #>  #> $parameters$key$location #> [1] \"query\" #>  #>  #> $parameters$oauth_token #> $parameters$oauth_token$type #> [1] \"string\" #>  #> $parameters$oauth_token$description #> [1] \"OAuth 2.0 token for the current user.\" #>  #> $parameters$oauth_token$location #> [1] \"query\" #>  #>  #> $parameters$prettyPrint #> $parameters$prettyPrint$type #> [1] \"boolean\" #>  #> $parameters$prettyPrint$description #> [1] \"Returns response with indentations and line breaks.\" #>  #> $parameters$prettyPrint$default #> [1] \"true\" #>  #> $parameters$prettyPrint$location #> [1] \"query\" #>  #>  #> $parameters$quotaUser #> $parameters$quotaUser$type #> [1] \"string\" #>  #> $parameters$quotaUser$description #> [1] \"Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\" #>  #> $parameters$quotaUser$location #> [1] \"query\" #>  #>  #> $parameters$upload_protocol #> $parameters$upload_protocol$type #> [1] \"string\" #>  #> $parameters$upload_protocol$description #> [1] \"Upload protocol for media (e.g. \\\"raw\\\", \\\"multipart\\\").\" #>  #> $parameters$upload_protocol$location #> [1] \"query\" #>  #>  #> $parameters$uploadType #> $parameters$uploadType$type #> [1] \"string\" #>  #> $parameters$uploadType$description #> [1] \"Legacy upload protocol for media (e.g. \\\"media\\\", \\\"multipart\\\").\" #>  #> $parameters$uploadType$location #> [1] \"query\" #>  #>  #> $parameters$`$.xgafv` #> $parameters$`$.xgafv`$type #> [1] \"string\" #>  #> $parameters$`$.xgafv`$description #> [1] \"V1 error format.\" #>  #> $parameters$`$.xgafv`$enum #> [1] \"1\" \"2\" #>  #> $parameters$`$.xgafv`$enumDescriptions #> [1] \"v1 error format\" \"v2 error format\" #>  #> $parameters$`$.xgafv`$location #> [1] \"query\" #>  #>  #>  #> $scopes #> [1] \"cloud-platform\" #>  #> $description #> [1] \"Destroys a SecretVersion. Sets the state of the SecretVersion to DESTROYED and irrevocably destroys the secret data.\" #>  #> $request #> [1] \"DestroySecretVersionRequest\" #>  #> $response #> [1] \"SecretVersion\" #>  #> $parameterOrder #> [1] \"name\" #>  sm_endpoint(4) #> $id #> [1] \"secretmanager.projects.locations.secrets.create\" #>  #> $httpMethod #> [1] \"POST\" #>  #> $path #> /v1/{parent}/secrets #>  #> $parameters #> $parameters$parent #> $parameters$parent$description #> [1] \"Required. The resource name of the project to associate with the Secret, in the format `projects/*` or `projects/*/locations/*`.\" #>  #> $parameters$parent$pattern #> [1] \"^projects/[^/]+/locations/[^/]+$\" #>  #> $parameters$parent$location #> [1] \"path\" #>  #> $parameters$parent$required #> [1] TRUE #>  #> $parameters$parent$type #> [1] \"string\" #>  #>  #> $parameters$secretId #> $parameters$secretId$description #> [1] \"Required. This must be unique within the project. A secret ID is a string with a maximum length of 255 characters and can contain uppercase and lowercase letters, numerals, and the hyphen (`-`) and underscore (`_`) characters.\" #>  #> $parameters$secretId$location #> [1] \"query\" #>  #> $parameters$secretId$type #> [1] \"string\" #>  #>  #> $parameters$name #> $parameters$name$description #> [1] \"Output only. The resource name of the Secret in the format `projects/*/secrets/*`.\" #>  #> $parameters$name$readOnly #> [1] TRUE #>  #> $parameters$name$type #> [1] \"string\" #>  #> $parameters$name$location #> [1] \"body\" #>  #>  #> $parameters$replication #> $parameters$replication$description #> [1] \"Optional. Immutable. The replication policy of the secret data attached to the Secret. The replication policy cannot be changed after the Secret has been created.\" #>  #> $parameters$replication$`$ref` #> [1] \"Replication\" #>  #> $parameters$replication$location #> [1] \"body\" #>  #>  #> $parameters$createTime #> $parameters$createTime$description #> [1] \"Output only. The time at which the Secret was created.\" #>  #> $parameters$createTime$readOnly #> [1] TRUE #>  #> $parameters$createTime$type #> [1] \"string\" #>  #> $parameters$createTime$format #> [1] \"google-datetime\" #>  #> $parameters$createTime$location #> [1] \"body\" #>  #>  #> $parameters$labels #> $parameters$labels$description #> [1] \"The labels assigned to this Secret. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: `\\\\p{Ll}\\\\p{Lo}{0,62}` Label values must be between 0 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: `[\\\\p{Ll}\\\\p{Lo}\\\\p{N}_-]{0,63}` No more than 64 labels can be assigned to a given resource.\" #>  #> $parameters$labels$type #> [1] \"object\" #>  #> $parameters$labels$additionalProperties #> $parameters$labels$additionalProperties$type #> [1] \"string\" #>  #>  #> $parameters$labels$location #> [1] \"body\" #>  #>  #> $parameters$topics #> $parameters$topics$description #> [1] \"Optional. A list of up to 10 Pub/Sub topics to which messages are published when control plane operations are called on the secret or its versions.\" #>  #> $parameters$topics$type #> [1] \"array\" #>  #> $parameters$topics$items #> $parameters$topics$items$`$ref` #> [1] \"Topic\" #>  #>  #> $parameters$topics$location #> [1] \"body\" #>  #>  #> $parameters$expireTime #> $parameters$expireTime$description #> [1] \"Optional. Timestamp in UTC when the Secret is scheduled to expire. This is always provided on output, regardless of what was sent on input.\" #>  #> $parameters$expireTime$type #> [1] \"string\" #>  #> $parameters$expireTime$format #> [1] \"google-datetime\" #>  #> $parameters$expireTime$location #> [1] \"body\" #>  #>  #> $parameters$ttl #> $parameters$ttl$description #> [1] \"Input only. The TTL for the Secret.\" #>  #> $parameters$ttl$type #> [1] \"string\" #>  #> $parameters$ttl$format #> [1] \"google-duration\" #>  #> $parameters$ttl$location #> [1] \"body\" #>  #>  #> $parameters$etag #> $parameters$etag$description #> [1] \"Optional. Etag of the currently stored Secret.\" #>  #> $parameters$etag$type #> [1] \"string\" #>  #> $parameters$etag$location #> [1] \"body\" #>  #>  #> $parameters$rotation #> $parameters$rotation$description #> [1] \"Optional. Rotation policy attached to the Secret. May be excluded if there is no rotation policy.\" #>  #> $parameters$rotation$`$ref` #> [1] \"Rotation\" #>  #> $parameters$rotation$location #> [1] \"body\" #>  #>  #> $parameters$versionAliases #> $parameters$versionAliases$description #> [1] \"Optional. Mapping from version alias to version name. A version alias is a string with a maximum length of 63 characters and can contain uppercase and lowercase letters, numerals, and the hyphen (`-`) and underscore ('_') characters. An alias string must start with a letter and cannot be the string 'latest' or 'NEW'. No more than 50 aliases can be assigned to a given secret. Version-Alias pairs will be viewable via GetSecret and modifiable via UpdateSecret. Access by alias is only be supported on GetSecretVersion and AccessSecretVersion.\" #>  #> $parameters$versionAliases$type #> [1] \"object\" #>  #> $parameters$versionAliases$additionalProperties #> $parameters$versionAliases$additionalProperties$type #> [1] \"string\" #>  #> $parameters$versionAliases$additionalProperties$format #> [1] \"int64\" #>  #>  #> $parameters$versionAliases$location #> [1] \"body\" #>  #>  #> $parameters$annotations #> $parameters$annotations$description #> [1] \"Optional. Custom metadata about the secret. Annotations are distinct from various forms of labels. Annotations exist to allow client tools to store their own state information without requiring a database. Annotation keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, begin and end with an alphanumeric character ([a-z0-9A-Z]), and may have dashes (-), underscores (_), dots (.), and alphanumerics in between these symbols. The total size of annotation keys and values must be less than 16KiB.\" #>  #> $parameters$annotations$type #> [1] \"object\" #>  #> $parameters$annotations$additionalProperties #> $parameters$annotations$additionalProperties$type #> [1] \"string\" #>  #>  #> $parameters$annotations$location #> [1] \"body\" #>  #>  #> $parameters$versionDestroyTtl #> $parameters$versionDestroyTtl$description #> [1] \"Optional. Secret Version TTL after destruction request This is a part of the Delayed secret version destroy feature. For secret with TTL>0, version destruction doesn't happen immediately on calling destroy instead the version goes to a disabled state and destruction happens after the TTL expires.\" #>  #> $parameters$versionDestroyTtl$type #> [1] \"string\" #>  #> $parameters$versionDestroyTtl$format #> [1] \"google-duration\" #>  #> $parameters$versionDestroyTtl$location #> [1] \"body\" #>  #>  #> $parameters$customerManagedEncryption #> $parameters$customerManagedEncryption$description #> [1] \"Optional. The customer-managed encryption configuration of the regionalized secrets. If no configuration is provided, Google-managed default encryption is used. Updates to the Secret encryption configuration only apply to SecretVersions added afterwards. They do not apply retroactively to existing SecretVersions.\" #>  #> $parameters$customerManagedEncryption$`$ref` #> [1] \"CustomerManagedEncryption\" #>  #> $parameters$customerManagedEncryption$location #> [1] \"body\" #>  #>  #> $parameters$access_token #> $parameters$access_token$type #> [1] \"string\" #>  #> $parameters$access_token$description #> [1] \"OAuth access token.\" #>  #> $parameters$access_token$location #> [1] \"query\" #>  #>  #> $parameters$alt #> $parameters$alt$type #> [1] \"string\" #>  #> $parameters$alt$description #> [1] \"Data format for response.\" #>  #> $parameters$alt$default #> [1] \"json\" #>  #> $parameters$alt$enum #> [1] \"json\"  \"media\" \"proto\" #>  #> $parameters$alt$enumDescriptions #> [1] \"Responses with Content-Type of application/json\"       #> [2] \"Media download with context-dependent Content-Type\"    #> [3] \"Responses with Content-Type of application/x-protobuf\" #>  #> $parameters$alt$location #> [1] \"query\" #>  #>  #> $parameters$callback #> $parameters$callback$type #> [1] \"string\" #>  #> $parameters$callback$description #> [1] \"JSONP\" #>  #> $parameters$callback$location #> [1] \"query\" #>  #>  #> $parameters$fields #> $parameters$fields$type #> [1] \"string\" #>  #> $parameters$fields$description #> [1] \"Selector specifying which fields to include in a partial response.\" #>  #> $parameters$fields$location #> [1] \"query\" #>  #>  #> $parameters$key #> $parameters$key$type #> [1] \"string\" #>  #> $parameters$key$description #> [1] \"API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.\" #>  #> $parameters$key$location #> [1] \"query\" #>  #>  #> $parameters$oauth_token #> $parameters$oauth_token$type #> [1] \"string\" #>  #> $parameters$oauth_token$description #> [1] \"OAuth 2.0 token for the current user.\" #>  #> $parameters$oauth_token$location #> [1] \"query\" #>  #>  #> $parameters$prettyPrint #> $parameters$prettyPrint$type #> [1] \"boolean\" #>  #> $parameters$prettyPrint$description #> [1] \"Returns response with indentations and line breaks.\" #>  #> $parameters$prettyPrint$default #> [1] \"true\" #>  #> $parameters$prettyPrint$location #> [1] \"query\" #>  #>  #> $parameters$quotaUser #> $parameters$quotaUser$type #> [1] \"string\" #>  #> $parameters$quotaUser$description #> [1] \"Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.\" #>  #> $parameters$quotaUser$location #> [1] \"query\" #>  #>  #> $parameters$upload_protocol #> $parameters$upload_protocol$type #> [1] \"string\" #>  #> $parameters$upload_protocol$description #> [1] \"Upload protocol for media (e.g. \\\"raw\\\", \\\"multipart\\\").\" #>  #> $parameters$upload_protocol$location #> [1] \"query\" #>  #>  #> $parameters$uploadType #> $parameters$uploadType$type #> [1] \"string\" #>  #> $parameters$uploadType$description #> [1] \"Legacy upload protocol for media (e.g. \\\"media\\\", \\\"multipart\\\").\" #>  #> $parameters$uploadType$location #> [1] \"query\" #>  #>  #> $parameters$`$.xgafv` #> $parameters$`$.xgafv`$type #> [1] \"string\" #>  #> $parameters$`$.xgafv`$description #> [1] \"V1 error format.\" #>  #> $parameters$`$.xgafv`$enum #> [1] \"1\" \"2\" #>  #> $parameters$`$.xgafv`$enumDescriptions #> [1] \"v1 error format\" \"v2 error format\" #>  #> $parameters$`$.xgafv`$location #> [1] \"query\" #>  #>  #>  #> $scopes #> [1] \"cloud-platform\" #>  #> $description #> [1] \"Creates a new Secret containing no SecretVersions.\" #>  #> $request #> [1] \"Secret\" #>  #> $response #> [1] \"Secret\" #>  #> $parameterOrder #> [1] \"parent\" #>"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_has_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a token is available — sm_has_token","title":"Check if a token is available — sm_has_token","text":"Checks token present internal authentication state. internal helper function.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_has_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a token is available — sm_has_token","text":"","code":"sm_has_token()"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_has_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a token is available — sm_has_token","text":"Logical. TRUE token available, FALSE otherwise.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_oauth_client.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the configured OAuth client — sm_oauth_client","title":"Retrieve the configured OAuth client — sm_oauth_client","text":"Returns currently configured OAuth client secretmanager package. client used OAuth flow obtain tokens. default, NULL configured user via sm_auth_configure().","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_oauth_client.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the configured OAuth client — sm_oauth_client","text":"","code":"sm_oauth_client()"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_oauth_client.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the configured OAuth client — sm_oauth_client","text":"gargle_oauth_client object, NULL client configured.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_oauth_client.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the configured OAuth client — sm_oauth_client","text":"","code":"if (FALSE) { # \\dontrun{ # Configure client first # sm_auth_configure(path = \"/path/to/your/client.json\") client <- sm_oauth_client() if (!is.null(client)) {   print(client) } } # }"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_project_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Default Google Cloud Project ID — sm_project_set","title":"Set Default Google Cloud Project ID — sm_project_set","text":"Sets default Google Cloud Project ID subsequent Secret Manager operations within current R session. Functions automatically use project ID unless explicitly overridden.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_project_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Default Google Cloud Project ID — sm_project_set","text":"","code":"sm_project_set(project_id)"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_project_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Default Google Cloud Project ID — sm_project_set","text":"project_id single character string specifying Google Cloud Project ID (e.g., \"-gcp-project-123\").","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_project_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Default Google Cloud Project ID — sm_project_set","text":"project_id character string, invisibly. Called side-effect setting default project.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_project_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Default Google Cloud Project ID — sm_project_set","text":"","code":"if (FALSE) { # \\dontrun{ sm_project_set(\"my-production-project\") # Now, sm_secret_ls() will default to \"my-production-project\"  sm_project_get() # \"my-production-project\"  # You can always override the default for specific calls: sm_secret_get(\"my-secret\", project_id = \"another-project\") } # }"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Secret — sm_secret_create","title":"Create a Secret — sm_secret_create","text":"Creates new Secret containing SecretVersions.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Secret — sm_secret_create","text":"","code":"sm_secret_create(   secret_id,   project_id = sm_project_get(),   replication = list(automatic = list()),   labels = NULL,   ... )"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Secret — sm_secret_create","text":"secret_id Required. unique identifier secret within project. Must string maximum length 255 characters can contain uppercase lowercase letters, numerals, hyphen (-) underscore (_) characters. project_id Google Cloud Project ID. Defaults sm_project_get(). replication Required. replication policy secret data. Must list either automatic user_managed configuration. labels Optional. Labels attach secret. ... Additional arguments methods.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Secret — sm_secret_create","text":"sm_secret object representing created secret.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a Secret — sm_secret_delete","title":"Delete a Secret — sm_secret_delete","text":"Deletes Secret versions.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a Secret — sm_secret_delete","text":"","code":"sm_secret_delete(secret, project_id = sm_project_get(), ...)  # S3 method for class 'character' sm_secret_delete(secret, project_id = sm_project_get(), ...)  # S3 method for class 'sm_secret' sm_secret_delete(secret, project_id = sm_project_get(), ...)"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a Secret — sm_secret_delete","text":"secret secret delete. Can secret ID (character string) existing sm_secret object. project_id Google Cloud Project ID. Defaults sm_project_get(). ... Additional arguments methods.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a Secret — sm_secret_delete","text":"Invisibly returns NULL.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Secret Metadata — sm_secret_get","title":"Get Secret Metadata — sm_secret_get","text":"Retrieves metadata specific Secret Manager secret.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Secret Metadata — sm_secret_get","text":"","code":"sm_secret_get(x, project_id = sm_project_get(), ...)  # S3 method for class 'character' sm_secret_get(x, project_id = sm_project_get(), ...)  # S3 method for class 'sm_secret' sm_secret_get(x, project_id = sm_project_get(), ...)"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Secret Metadata — sm_secret_get","text":"x identifier secret. Can secret ID (character string) existing sm_secret object refresh metadata. project_id Google Cloud Project ID. Defaults sm_project_get(). ... Additional arguments methods.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_ls.character.html","id":null,"dir":"Reference","previous_headings":"","what":"List Secrets in a Project — sm_secret_ls.character","title":"List Secrets in a Project — sm_secret_ls.character","text":"Lists metadata Secrets given Google Cloud Project.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_ls.character.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Secrets in a Project — sm_secret_ls.character","text":"","code":"# S3 method for class 'character' sm_secret_ls(project_id = sm_project_get(), filter = NULL, ...)"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_ls.character.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Secrets in a Project — sm_secret_ls.character","text":"project_id Google Cloud Project ID. Defaults sm_project_get(). filter Optional. filter string, adhering Secret Manager's List-operation filtering rules. ... Additional arguments methods.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"List Secrets in a Project — sm_secret_ls","title":"List Secrets in a Project — sm_secret_ls","text":"Lists metadata Secrets given Google Cloud Project.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Secrets in a Project — sm_secret_ls","text":"","code":"sm_secret_ls(project_id = sm_project_get(), filter = NULL, ...)"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Secrets in a Project — sm_secret_ls","text":"project_id Google Cloud Project ID. Defaults sm_project_get(). filter Optional. filter string, adhering Secret Manager's List-operation filtering rules. ... Additional arguments methods.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_update.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Secret — sm_secret_update","title":"Update a Secret — sm_secret_update","text":"Updates metadata existing Secret.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_update.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Secret — sm_secret_update","text":"","code":"sm_secret_update(   secret,   project_id = sm_project_get(),   replication = NULL,   labels = NULL,   etag = NULL,   ... )  # S3 method for class 'character' sm_secret_update(   secret,   project_id = sm_project_get(),   replication = NULL,   labels = NULL,   etag = NULL,   ... )  # S3 method for class 'sm_secret' sm_secret_update(   secret,   project_id = sm_project_get(),   replication = NULL,   labels = NULL,   etag = NULL,   ... )"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_update.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a Secret — sm_secret_update","text":"secret secret update. Can secret ID (character string) existing sm_secret object. project_id Google Cloud Project ID. Defaults sm_project_get(). replication Optional. replication policy secret data. Must list either automatic user_managed configuration. labels Optional. Labels attach secret. etag Optional. etag secret. provided, update succeed secret's current etag matches value. ... Additional arguments methods.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_update.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a Secret — sm_secret_update","text":"sm_secret object representing updated secret.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_add.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Secret Version — sm_secret_version_add","title":"Add a Secret Version — sm_secret_version_add","text":"Adds new version existing Secret.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_add.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Secret Version — sm_secret_version_add","text":"","code":"sm_secret_version_add(secret, payload, project_id = sm_project_get(), ...)  # S3 method for class 'character' sm_secret_version_add(secret, payload, project_id = sm_project_get(), ...)  # S3 method for class 'sm_secret' sm_secret_version_add(secret, payload, project_id = sm_project_get(), ...)"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_add.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Secret Version — sm_secret_version_add","text":"secret secret add version . Can secret ID (character string) existing sm_secret object. payload secret data store. base64 encoded. project_id Google Cloud Project ID. Defaults sm_project_get(). ... Additional arguments methods.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_add.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Secret Version — sm_secret_version_add","text":"sm_secret_version object representing new version.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_delete.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a Secret Version — sm_secret_version_delete","title":"Delete a Secret Version — sm_secret_version_delete","text":"Deletes Secret Version.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_delete.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a Secret Version — sm_secret_version_delete","text":"","code":"sm_secret_version_delete(   secret,   version_id,   project_id = sm_project_get(),   ... )  # S3 method for class 'character' sm_secret_version_delete(   secret,   version_id,   project_id = sm_project_get(),   ... )  # S3 method for class 'sm_secret' sm_secret_version_delete(   secret,   version_id,   project_id = sm_project_get(),   ... )"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_delete.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a Secret Version — sm_secret_version_delete","text":"secret secret containing version. Can secret ID (character string) existing sm_secret object. version_id version ID delete. project_id Google Cloud Project ID. Defaults sm_project_get(). ... Additional arguments methods.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_delete.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a Secret Version — sm_secret_version_delete","text":"Invisibly returns NULL.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_disable.html","id":null,"dir":"Reference","previous_headings":"","what":"Disable a Secret Version — sm_secret_version_disable","title":"Disable a Secret Version — sm_secret_version_disable","text":"Disables Secret Version.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_disable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disable a Secret Version — sm_secret_version_disable","text":"","code":"sm_secret_version_disable(   secret,   version_id,   project_id = sm_project_get(),   ... )  # S3 method for class 'character' sm_secret_version_disable(   secret,   version_id,   project_id = sm_project_get(),   ... )  # S3 method for class 'sm_secret' sm_secret_version_disable(   secret,   version_id,   project_id = sm_project_get(),   ... )"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_disable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disable a Secret Version — sm_secret_version_disable","text":"secret secret containing version. Can secret ID (character string) existing sm_secret object. version_id version ID disable. project_id Google Cloud Project ID. Defaults sm_project_get(). ... Additional arguments methods.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_disable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disable a Secret Version — sm_secret_version_disable","text":"sm_secret_version object representing disabled version.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_enable.html","id":null,"dir":"Reference","previous_headings":"","what":"Enable a Secret Version — sm_secret_version_enable","title":"Enable a Secret Version — sm_secret_version_enable","text":"Enables Secret Version.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_enable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enable a Secret Version — sm_secret_version_enable","text":"","code":"sm_secret_version_enable(   secret,   version_id,   project_id = sm_project_get(),   ... )  # S3 method for class 'character' sm_secret_version_enable(   secret,   version_id,   project_id = sm_project_get(),   ... )  # S3 method for class 'sm_secret' sm_secret_version_enable(   secret,   version_id,   project_id = sm_project_get(),   ... )"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_enable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enable a Secret Version — sm_secret_version_enable","text":"secret secret containing version. Can secret ID (character string) existing sm_secret object. version_id version ID enable. project_id Google Cloud Project ID. Defaults sm_project_get(). ... Additional arguments methods.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_enable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enable a Secret Version — sm_secret_version_enable","text":"sm_secret_version object representing enabled version.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_get.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Secret Version Metadata — sm_secret_version_get","title":"Get Secret Version Metadata — sm_secret_version_get","text":"Gets metadata specific Secret Version.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_get.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Secret Version Metadata — sm_secret_version_get","text":"","code":"sm_secret_version_get(secret, version_id, project_id = sm_project_get(), ...)  # S3 method for class 'character' sm_secret_version_get(secret, version_id, project_id = sm_project_get(), ...)  # S3 method for class 'sm_secret' sm_secret_version_get(secret, version_id, project_id = sm_project_get(), ...)"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_get.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Secret Version Metadata — sm_secret_version_get","text":"secret secret containing version. Can secret ID (character string) existing sm_secret object. version_id version ID get. Can \"latest\" get latest version. project_id Google Cloud Project ID. Defaults sm_project_get(). ... Additional arguments methods.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_get.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Secret Version Metadata — sm_secret_version_get","text":"sm_secret_version object representing version metadata.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"List Secret Versions — sm_secret_version_ls","title":"List Secret Versions — sm_secret_version_ls","text":"Lists metadata Secret Versions associated given Secret.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Secret Versions — sm_secret_version_ls","text":"","code":"sm_secret_version_ls(secret, project_id = sm_project_get(), filter = NULL, ...)  # S3 method for class 'sm_secret' sm_secret_version_ls(secret, project_id = sm_project_get(), filter = NULL, ...)  # S3 method for class 'character' sm_secret_version_ls(secret, project_id = sm_project_get(), filter = NULL, ...)"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_secret_version_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Secret Versions — sm_secret_version_ls","text":"secret secret list versions. Can sm_secret object character string representing secret ID. project_id Google Cloud Project ID. Defaults sm_project_get(). filter Optional. filter string secret versions. ... Additional arguments methods.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a token for Secret Manager API requests — sm_token","title":"Provide a token for Secret Manager API requests — sm_token","text":"Retrieves current token Secret Manager. authentication active (.sm_auth$auth_active TRUE) token cached, trigger sm_auth() obtain one. function typically used package functions make API requests.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a token for Secret Manager API requests — sm_token","text":"","code":"sm_token()"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a token for Secret Manager API requests — sm_token","text":"httr::config object containing httr::Token2.0 object, NULL auth inactive.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide a token for Secret Manager API requests — sm_token","text":"","code":"if (FALSE) { # \\dontrun{ # Configure auth first if needed (e.g., with your client ID) # sm_auth_configure(path = \"path/to/client.json\") # sm_auth() # or let it be called automatically  token <- sm_token() if (!is.null(token)) {   # Use token in httr::GET() or other API calls } } # }"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_user.html","id":null,"dir":"Reference","previous_headings":"","what":"Get information about the authenticated user — sm_user","title":"Get information about the authenticated user — sm_user","text":"Provides information Google identity associated current token. usually includes email address. attempts retrieve information token .","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_user.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get information about the authenticated user — sm_user","text":"","code":"sm_user(token = NULL)"},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_user.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get information about the authenticated user — sm_user","text":"token optional token object. NULL, uses cached token obtained sm_token().","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_user.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get information about the authenticated user — sm_user","text":"list containing user information (e.g., email) NULL token available user information parsed.","code":""},{"path":"https://brancengregory.github.io/secretmanager/reference/sm_user.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get information about the authenticated user — sm_user","text":"","code":"if (FALSE) { # \\dontrun{ # Authenticate first # sm_auth()  user_info <- sm_user() if (!is.null(user_info)) {   print(user_info$email) } } # }"},{"path":"https://brancengregory.github.io/secretmanager/news/index.html","id":"secretmanager-002","dir":"Changelog","previous_headings":"","what":"secretmanager 0.0.2","title":"secretmanager 0.0.2","text":"Adds secret class specialized methods Implements print method secret class hides secret value R output","code":""},{"path":"https://brancengregory.github.io/secretmanager/news/index.html","id":"secretmanager-001","dir":"Changelog","previous_headings":"","what":"secretmanager 0.0.1","title":"secretmanager 0.0.1","text":"Basic implementation secret creation latest version access","code":""}]
